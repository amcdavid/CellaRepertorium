% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pairing-methods.R
\name{canonicalize_by_prevalence}
\alias{canonicalize_by_prevalence}
\alias{canonicalize_by_chain}
\title{For each cell, return a single, canonical chain-cluster}
\usage{
canonicalize_by_prevalence(tbl, cell_identifiers = "barcode",
  cluster_idx = "cluster_idx", order = 1)

canonicalize_by_chain(tbl, cell_identifiers = "barcode",
  sort_factors = c("chain", "umis", "reads"),
  cluster_idx = "cluster_idx", order = 1, chain_levels = c("IGL",
  "IGK", "TRA", "TRB", "IGH"))
}
\arguments{
\item{tbl}{`data.frame` containing columns specified in `cell_identifiers`, `cluster_idx` and optionally `chain_identifiers`}

\item{cell_identifiers}{`character` vector specifying columns in `tbl` that identify a cell}

\item{cluster_idx}{`character` specifying the column in `tbl` that identifies a clsuter}

\item{order}{return the 1st, 2nd, 3rd, etc, most common chain-cluster}

\item{sort_factors}{`character` vector naming columns in `tbl` to sorted on, within  `cell_identifier`. Sorted by first element first, then ties broken by subsequent elements.  Sorted in decreasing order for each element.}

\item{chain_levels}{an optional `character` vector providing the sort order of the `chain` column in `tbl`.  Set to length zero to disable.}
}
\value{
`data.frame` with columns from `cell_identifiers` and a single `cluster_idx` for each cell
}
\description{
In single cell data, multiple chains (heavy-light or alpha-beta) are expected.  In some cases, there could be more than two (eg multiple alpha alleles for T cells).
This picks a cluster id for each cell based on the overall prevalence of cluster ids over all cells in `tbl`.
If order = 1 then the canonical chain-cluster will be the most prevalent, and if order = 2, it will be the 2nd most prevalent, and so on.  Ties are broken arbitrarily (possibly by lexicographic order of `cluster_idx`).
}
\section{Functions}{
\itemize{
\item \code{canonicalize_by_chain}: return a canonical contig by chain type, with TRB/IGH returned first. By default, ties are broken by umis and reads.
}}

