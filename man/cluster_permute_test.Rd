% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/permutation-testing.R
\name{cluster_permute_test}
\alias{cluster_permute_test}
\title{Tests for independence between clusters and labels using permutation}
\usage{
cluster_permute_test(clusters, labels, covariates, statistic,
  n_perm = 1000, alternative = c("two.sided", "less", "greater"), ...)
}
\arguments{
\item{clusters}{\code{factor} of length n}

\item{labels}{\code{factor} of length n}

\item{covariates}{optional \code{factor} of length n.}

\item{statistic}{function of \code{clusters}, \code{labels} and optionally \code{covariates} that returns a \code{numeric} of length 1.}

\item{n_perm}{number of permutations.}

\item{alternative}{`character` naming the direction `statistic` should be fall under the alternative hypothesis}

\item{...}{passed to \code{statistic}}
}
\value{
a list containing the observed value of the statistic, its expectation (under independence), a p-value, and the monte carlo standard error (of the expected value).
}
\description{
This tests a statistic for association between clusters and labels by permuting the link between the two
Both clusters and labels should be factors.  Each observation represents a cell.
For example, \code{clusters} could be a clonal ID, while \code{labels} is a subject ID.
\code{statistic} is any
}
\examples{
library(dplyr)
purity = function(clusters, labels, covariates){
n_label_cluster = data_frame(labels = labels, clusters = clusters) \%>\%
    group_by(clusters, labels) \%>\% summarize(n = n()) \%>\% ungroup()
singletons = mean(n_label_cluster$n == 1)
singletons
}

clusters = c(1, 1, 1, 2, 2, 3, 3)
labels = c('A', 'A', 'B', 'B', 'B', 'C', 'C')
covariates = c('X', 'X', 'Y', 'Y', 'Y', 'Y', 'Y')
cluster_permute_test(clusters, labels, statistic = purity, n_perm  = 50)

}
